/* Tiny reset thingy */
body,html{margin:0;padding:0;}

.wrapper {
  /* The height needs to be set to a fixed value for the effect to work.
   * 100vh is the full height of the viewport. */
  height: 100vh;
  /* The scaling of the images would add a horizontal scrollbar, so disable x overflow. */
  overflow-x: hidden;
  /* Enable scrolling on the page. */
  overflow-y: auto;
  /* Set the perspective to 2px. This is essentailly the simulated distance from the viewport to transformed objects.*/
  perspective: 2px;
}

.section {
  /* Needed for children to be absolutely positioned relative to the parent.
  position: relative; */
  /* The height of the container. Must be set, but it doesn't really matter what the value is. */
  height: 50%;

  /* For text formatting. */
  color: white;
	margin-bottom: 15px;

  text-shadow: 0 0 5px #000;
}

.parallax::after {
  /* Display and position the pseudo-element */
  content: " ";
  position: absolute;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;


  /* Move the pseudo-element back away from the camera,
   * then scale it back up to fill the viewport.
   * Because the pseudo-element is further away, it appears to move more slowly, like in real life. */
  transform: translateZ(-1px) scale(1.5);
  /* Force the background image to fill the whole element. */
  background-size: 100%;
  /* Keep the image from overlapping sibling elements. */
  z-index: -1;
}
.right {
	margin-right: 15%;
}
.right h3 {
	margin-bottom: 10px;
	text-align: center;
}
.left {
	margin-left: 15%;
}
.left h1,p {
	margin: 0
}
/* The styling for the static div. */
.static {
  background: white;
  height: 110%;
}
.static ul {
  text-align: justify;
  color: black;
  text-shadow: none;
}
.bg1 {
	display: flex;
  align-items: flex-end;
  justify-content: space-between;
}
/* Sets the actual background images to adorable kitties. This part is crucial. */
.bg1::after {
  background: linear-gradient(rgba(0, 0, 0, 0),
                              rgba(0, 0, 0, 0.5),
                              rgba(0, 0, 0, 1)),
                              url('../stadium.jpg');
  background-size: cover;

}

.gallery {
   width: 640px;
  margin: 0 auto;
  padding: 5px;
  background: #fff;
  box-shadow: 0 1px 2px rgba(0,0,0,.3);
}

.gallery > div {
  position: relative;
  float: left;
  padding: 5px;
}

.gallery > div > img {
  display: block;
  width: 200px;
  transition: .1s transform;
  transform: translateZ(0); /* hack */
}

.gallery > div:hover {
  z-index: 1;
}

.gallery > div:hover > img {
  transform: scale(1.7,1.7);
  transition: .3s transform;
}

.cf:before, .cf:after {
  display: table;
  content: "";
  line-height: 0;
}

.cf:after {
  clear: both;
}
.static h1 {
	color: black;
	text-shadow: none;
	text-align: left;
	font-size: 40px;
	margin-top: 15px;
}
.static p {
	color: black;
	text-shadow: none;
	padding: 0px;
}
.button {
  display: inline-block;
  background-color: #f4511e;
  border: none;
  color: #FFFFFF;
  text-align: center;
  font-size: 100%;
  padding: 5px;
  transition: all 0.5s;
  cursor: pointer;
  margin: 5px;
  border-radius: 30px;
	width: 150px;
}

.button span {
  cursor: pointer;
  display: inline-block;
  position: relative;
  transition: 0.5s;
}

.button span:after {
  content: '\00bb';
  position: absolute;
  opacity: 0;
  top: 0;
  right: 5%;
  transition: 0.5s;
}

.button:hover span {
  padding-right: 25px;
}

.button:hover span:after {
  opacity: 1;
  right: 0;
}

.name {
  font-size: 30pt;
}

.date {
  font-size: 22pt;
}

.price {
	text-align: right;
	font-size: 30pt;
}

.rules {
	margin-left: 15%;
	margin-right: 15%;
}

.static > h1 {
	padding-top: 30px;
	margin-left: 15%;
	margin-bottom: 15px;
}
